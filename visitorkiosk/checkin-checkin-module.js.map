{"version":3,"sources":["./src/app/checkin/checkin-result.component.ts","./src/app/checkin/checkin-covid.component.ts","./src/app/checkin/checkin-preferences.component.ts","./src/app/checkin/checkin-error.component.ts","./src/app/checkin/checkin-photo.component.ts","./src/app/checkin/checkin-qr-scan.component.ts","./src/app/checkin/checkin.module.ts","./src/app/checkin/checkin-group.component.ts","./src/app/checkin/checkin-details.component.ts","./src/app/checkin/checkin.component.ts"],"names":[],"mappings":"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","file":"checkin-checkin-module.js","sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { first } from 'rxjs/operators';\r\nimport { CheckinStateService } from './checkin-state.service';\r\n\r\n@Component({\r\n    selector: 'checkin-results',\r\n    template: `\r\n        <div\r\n            class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center my-4 p-4 mx-auto\"\r\n            *ngIf=\"event | async\"\r\n        >\r\n            <h3 class=\"text-xl\">{{ 'You are checked in!' | translate }}</h3>\r\n            <p class=\"text-center my-4\">\r\n                {{ 'Welcome, you have a meeting at' | translate }}\r\n                {{ (event | async)?.event_start || '' | date: 'shortDate' }}\r\n                {{ 'with' | translate }}\r\n                {{ (event | async).organiser?.name || '' }}.<br />\r\n                {{ (event | async).organiser?.name || '' }}\r\n                {{\r\n                    'has been notified and will be with you shortly.'\r\n                        | translate\r\n                }}&nbsp;\r\n                <ng-container *ngIf=\"!(event | async)?.can_access_lift\">\r\n                    {{ 'Please wait in the lobby.' | translate }}\r\n                </ng-container>\r\n                <ng-container *ngIf=\"(event | async)?.can_access_lift\">\r\n                    {{\r\n                        'Please use the vistor access lift over there.'\r\n                            | translate\r\n                    }}\r\n                </ng-container>\r\n            </p>\r\n            <a button mat-button [routerLink]=\"['/checkin', 'preferences']\">\r\n                {{ 'Done' | translate }}\r\n            </a>\r\n        </div>\r\n    `,\r\n    styles: [\r\n        `\r\n            :host {\r\n                position: absolute;\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                top: 0;\r\n                left: 0;\r\n                right: 0;\r\n                bottom: 0;\r\n                background-color: rgba(0, 0, 0, 0.5);\r\n            }\r\n\r\n            :host > div {\r\n                width: 32rem;\r\n                max-width: calc(100vw - 2rem);\r\n            }\r\n\r\n            [button] {\r\n                min-width: 8rem;\r\n            }\r\n        `,\r\n    ],\r\n})\r\nexport class CheckinResultsComponent {\r\n    public readonly event = this._checkin.event;\r\n    public readonly guest = this._checkin.guest;\r\n\r\n    constructor(\r\n        private _checkin: CheckinStateService,\r\n        private _router: Router\r\n    ) {}\r\n\r\n    public ngOnInit(): void {\r\n        this.event.pipe(first()).subscribe((_) => (!_ ? this.previous() : ''));\r\n    }\r\n\r\n    public previous(): void {\r\n        this._router.navigate(['/checkin']);\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { notifyError } from '@user-interfaces/common';\r\nimport { CheckinStateService } from './checkin-state.service';\r\n\r\n@Component({\r\n    selector: '[checkin-covid]',\r\n    template: `\r\n        <div\r\n            class=\"bg-white rounded p-4 relative overflow-y-auto overflow-x-hidden\"\r\n        >\r\n            <h3 class=\"text-xl font-medium mb-4\">\r\n                {{ 'COVID Disclaimer' | translate }}\r\n            </h3>\r\n            <ol class=\"list-decimal list-inside\">\r\n                <li>\r\n                    {{ 'Do you have any of the following symptoms?' | translate\r\n                    }}<br /><br />\r\n                    <ul class=\"list-disc list-inside px-4 mb-4\">\r\n                        <li>{{ 'Fever' | translate }}</li>\r\n                        <li>{{ 'Cough' | translate }}</li>\r\n                        <li>{{ 'Shortness of breath' | translate }}</li>\r\n                        <li>{{ 'Chills' | translate }}</li>\r\n                        <li>{{ 'Body aches' | translate }}</li>\r\n                        <li>{{ 'Sore or scratchy throat' | translate }}</li>\r\n                        <li>{{ 'Headache' | translate }}</li>\r\n                        <li>{{ 'Runny nose' | translate }}</li>\r\n                        <li>{{ 'Muscle pain' | translate }}</li>\r\n                        <li>{{ 'Vomitting' | translate }}</li>\r\n                        <li>{{ 'Nausea' | translate }}</li>\r\n                        <li>{{ 'Diarrhoa' | translate }}</li>\r\n                        <li>{{ 'Loss of taste or smell' | translate }}</li>\r\n                    </ul>\r\n                    <mat-radio-group\r\n                        aria-label=\"Has Symptoms\"\r\n                        [(ngModel)]=\"symptoms\"\r\n                    >\r\n                        <mat-radio-button value=\"true\">{{\r\n                            'Yes' | translate\r\n                        }}</mat-radio-button>\r\n                        <mat-radio-button value=\"false\" class=\"ml-4\">{{\r\n                            'No' | translate\r\n                        }}</mat-radio-button>\r\n                    </mat-radio-group>\r\n                </li>\r\n                <hr class=\"my-4\" />\r\n                <li>\r\n                    {{\r\n                        'Have you been in contact with a COVID-19 case in the last 14 days or been asked to self-isolate by a health offical?'\r\n                            | translate\r\n                    }}<br /><br />\r\n                    <mat-radio-group\r\n                        aria-label=\"COVID contact or self-isolated\"\r\n                        [(ngModel)]=\"contact\"\r\n                    >\r\n                        <mat-radio-button value=\"true\">{{\r\n                            'Yes' | translate\r\n                        }}</mat-radio-button>\r\n                        <mat-radio-button value=\"false\" class=\"ml-4\">{{\r\n                            'No' | translate\r\n                        }}</mat-radio-button>\r\n                    </mat-radio-group>\r\n                </li>\r\n            </ol>\r\n            <button mat-button (click)=\"confirm()\">\r\n                {{ 'Confirm' | translate }}\r\n            </button>\r\n            <a\r\n                mat-icon-button\r\n                [disabled]=\"!symptoms && !contact\"\r\n                class=\"absolute top-0 right-0\"\r\n                [routerLink]=\"['/welcome']\"\r\n            >\r\n                <app-icon className=\"material-icons\">{{\r\n                    'Close' | translate\r\n                }}</app-icon>\r\n            </a>\r\n        </div>\r\n    `,\r\n    styles: [\r\n        `\r\n            :host {\r\n                position: absolute;\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                top: 0;\r\n                left: 0;\r\n                right: 0;\r\n                bottom: 0;\r\n                background-color: rgba(0, 0, 0, 0.5);\r\n            }\r\n\r\n            :host > div {\r\n                width: 32rem;\r\n                max-width: calc(100vw - 2rem);\r\n                max-height: calc(100% - 2rem);\r\n            }\r\n\r\n            .absolute {\r\n                position: absolute;\r\n            }\r\n\r\n            button {\r\n                margin: 1rem 11rem 0;\r\n                width: 8rem;\r\n            }\r\n        `,\r\n    ],\r\n})\r\nexport class CheckinCovidComponent {\r\n    public contact: string;\r\n    public symptoms: string;\r\n\r\n    constructor(\r\n        private _router: Router,\r\n        private _checkin: CheckinStateService\r\n    ) {}\r\n\r\n    public confirm() {\r\n        if (!this.symptoms || !this.contact)\r\n            return notifyError('Please select yes or no for each question');\r\n        this._checkin.updateGuest({\r\n            covid: this.contact === 'true',\r\n            symptoms: this.symptoms === 'true',\r\n        });\r\n        if (this.symptoms === 'false' && this.contact === 'false') {\r\n            this._router.navigate(['/checkin', 'results']);\r\n        } else {\r\n            this._checkin.setError(\r\n                'Please get tested for COVID-19 and self-isolate at home for 14 days'\r\n            );\r\n            this._router.navigate(['/checkin', 'error']);\r\n        }\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n    selector: 'checkin-preferences',\r\n    template: `\r\n        <div class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center my-4 p-4 mx-auto\">\r\n            <h3 class=\"text-xl\">Would you like a drink?</h3>\r\n            <form *ngIf=\"form\" [formGroup]=\"form\"> \r\n\r\n            </form>\r\n            <button mat-button (click)=\"next()\">Update</button>\r\n            <a\r\n                mat-icon-button\r\n                class=\"absolute top-0 right-0\"\r\n                [routerLink]=\"['/welcome']\"\r\n            >\r\n                <app-icon className=\"material-icons\">close</app-icon>\r\n            </a>\r\n        </div>\r\n    `,\r\n    styles: [\r\n        `\r\n            .absolute {\r\n                position: absolute;\r\n            }\r\n        `,\r\n    ],\r\n})\r\nexport class CheckinPreferencesComponent {\r\n\r\n    public form: FormGroup;\r\n\r\n    constructor(private _router: Router) {}\r\n\r\n    public next() {\r\n        this._router.navigate(['/welcome']);\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { th } from 'date-fns/locale';\r\n//import { userInfo } from 'os';\r\nimport { CheckinStateService } from './checkin-state.service';\r\n\r\n@Component({\r\n    selector: 'checkin-error',\r\n    template: `\r\n        <div\r\n            class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center my-4 mx-auto p-4\"\r\n        >\r\n            <h3 class=\"text-xl mb-4\">\r\n                {{ 'Please see reception.' | translate }}\r\n            </h3>\r\n            <p class=\"mb-2\" *ngIf=\"error | async\">\r\n                {{ error | async }}\r\n            </p>\r\n            <p class=\"mb-4\">\r\n                {{ 'Our staff at reception will assist you.' | translate }}\r\n            </p>\r\n            <a button mat-button [routerLink]=\"['/welcome']\">{{\r\n                'Back' | translate\r\n            }}</a>\r\n        </div>\r\n    `,\r\n    styles: [\r\n        `\r\n            :host {\r\n                position: absolute;\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                top: 0;\r\n                left: 0;\r\n                right: 0;\r\n                bottom: 0;\r\n                background-color: rgba(0, 0, 0, 0.5);\r\n            }\r\n\r\n            :host > div {\r\n                width: 28rem;\r\n                max-width: calc(100vw - 2rem);\r\n            }\r\n        `,\r\n    ],\r\n})\r\nexport class CheckinErrorComponent {\r\n    public readonly error = this._checkin.error;\r\n\r\n    constructor(private _checkin: CheckinStateService) {}\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { notifyError } from '@user-interfaces/common';\r\nimport { CheckinStateService } from './checkin-state.service';\r\n\r\n@Component({\r\n    selector: 'checkin-photo',\r\n    template: `\r\n        <div\r\n            class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center p-4\"\r\n            *ngIf=\"!loading; else load_state\"\r\n        >\r\n            <h3 class=\"text-xl mb-4\">\r\n                {{ 'Take a photo to continue' | translate }}\r\n            </h3>\r\n            <a-take-photo (photoAccepted)=\"handlePhoto($event)\"></a-take-photo>\r\n            <a\r\n                mat-icon-button\r\n                class=\"absolute top-0 right-0\"\r\n                [routerLink]=\"['/welcome']\"\r\n            >\r\n                <app-icon className=\"material-icons\">{{\r\n                    'Close' | translate\r\n                }}</app-icon>\r\n            </a>\r\n        </div>\r\n        <ng-template #load_state>\r\n            <div class=\"flex flex-col items-center m-auto\">\r\n                <mat-spinner [diameter]=\"48\"></mat-spinner>\r\n                <div class=\"my-4 text-lg text-white\">\r\n                    {{ 'Printing guest pass...' | translate }}\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n    `,\r\n    styles: [\r\n        `\r\n            :host {\r\n                position: absolute;\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                top: 0;\r\n                left: 0;\r\n                right: 0;\r\n                bottom: 0;\r\n                background-color: rgba(0, 0, 0, 0.5);\r\n            }\r\n\r\n            .absolute {\r\n                position: absolute;\r\n            }\r\n        `,\r\n    ],\r\n})\r\nexport class CheckinPhotoComponent {\r\n    /** Whether guest pass is being loaded */\r\n    public loading: boolean;\r\n\r\n    constructor(\r\n        private _checkin: CheckinStateService,\r\n        private _router: Router\r\n    ) {}\r\n\r\n    public async handlePhoto(event: any) {\r\n        if (!event) {\r\n            return notifyError('Error saving image, please try again');\r\n        }\r\n        this.loading = true;\r\n        this._checkin.setPhoto(event);\r\n        await this._checkin.printPass().catch((e) => {\r\n            this.loading = false;\r\n            notifyError(e);\r\n            throw e;\r\n        });\r\n        this.loading = false;\r\n        this._router.navigate(['/checkin', 'covid']);\r\n    }\r\n}\r\n","import { Component, ElementRef, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { notifyError } from '@user-interfaces/common';\r\nimport { BrowserQRCodeReader } from '@zxing/library';\r\n\r\nimport { CheckinStateService } from './checkin-state.service';\r\n\r\n@Component({\r\n    selector: '[checkin-qr-scan]',\r\n    template: `\r\n        <div\r\n            class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center\"\r\n        >\r\n            <h1>{{ 'Check In' | translate }}</h1>\r\n            <p class=\"mt-6 mb-4\">\r\n                {{\r\n                    'Please enter your email address or scan your QR code'\r\n                        | translate\r\n                }}\r\n            </p>\r\n            <mat-form-field appearance=\"outline\">\r\n                <input\r\n                    matInput\r\n                    [(ngModel)]=\"email\"\r\n                    placeholder=\"Enter email...\"\r\n                    type=\"email\"\r\n                    autocomplete=\"off\"\r\n                    (blur)=\"checkEmail(email)\"\r\n                    (keyup.enter)=\"checkEmail(email)\"\r\n                />\r\n                <mat-error>{{ 'Invalid email format' | translate }}</mat-error>\r\n            </mat-form-field>\r\n            <video\r\n                #video\r\n                class=\"rounded m-4 bg-gray-200 border border-gray-500\"\r\n                id=\"qr-stream\"\r\n                playsinline\r\n                width=\"640\"\r\n                height=\"480\"\r\n                autoplay\r\n            ></video>\r\n            <a\r\n                mat-icon-button\r\n                class=\"absolute top-0 right-0\"\r\n                [routerLink]=\"['/welcome']\"\r\n            >\r\n                <app-icon className=\"material-icons\">{{\r\n                    'Close' | translate\r\n                }}</app-icon>\r\n            </a>\r\n        </div>\r\n    `,\r\n    styles: [\r\n        `\r\n            :host {\r\n                display: flex;\r\n                flex-direction: column;\r\n                align-items: center;\r\n                justify-content: center;\r\n                height: 100%;\r\n                width: 100%;\r\n                background-color: rgba(0, 0, 0, 0.5);\r\n            }\r\n\r\n            video {\r\n                width: 36rem;\r\n                height: 27rem;\r\n            }\r\n\r\n            mat-form-field {\r\n                width: 36rem;\r\n            }\r\n\r\n            a {\r\n                position: absolute;\r\n            }\r\n        `,\r\n    ],\r\n})\r\nexport class CheckinQRScanComponent {\r\n    /** Email address of the visitor */\r\n    public email: string;\r\n\r\n    public qrepoc: Number;\r\n    /** Video element to emit camera feed */\r\n    @ViewChild('video') private _video_el: ElementRef<HTMLVideoElement>;\r\n    /** QR Reader */\r\n    private _reader: BrowserQRCodeReader;\r\n\r\n    constructor(\r\n        private _checkin: CheckinStateService,\r\n        private _router: Router,\r\n        private translateService: TranslateService\r\n    ) {\r\n        this.translateService.setDefaultLang('en');\r\n        this.translateService.use(localStorage.getItem('lang') || 'en');\r\n    }\r\n\r\n    public ngOnInit() {\r\n        this._reader = new BrowserQRCodeReader();\r\n        this.setupQRReader();\r\n    }\r\n\r\n    public ngOnDestroy() {\r\n        if (this._video_el?.nativeElement.srcObject) {\r\n            const track = (this._video_el.nativeElement\r\n                .srcObject as any).getTracks()[0];\r\n            if (track) {\r\n                track.stop();\r\n            }\r\n        }\r\n    }\r\n\r\n    public async checkQRCode(raw_text: string) {\r\n        // var sevent = this._checkin.eventstart\r\n        // console.log(\"start_event\"+ sevent)\r\n        const chunks = raw_text.split(',');\r\n        //var epoc = Date.now()\r\n        this.qrepoc = parseInt((Date.now() / 1000).toString());\r\n        //var newepoc = epoc - Number(qrepoc);\r\n        if (chunks.length < 2) {\r\n            notifyError('Invalid QRCode');\r\n            this.setupQRReader();\r\n            return;\r\n        } else {\r\n            await this._checkin\r\n                .loadGuestAndEvent(chunks[0], chunks[1])\r\n                .catch((err) => {\r\n                    this.handleError(err.message || err);\r\n                    throw err;\r\n                });\r\n            //this._router.navigate(['/checkin', 'details']);\r\n            this._router.navigate(['/checkin', 'details'], {\r\n                state: { data: { qrepoc: this.qrepoc } },\r\n            });\r\n        }\r\n    }\r\n\r\n    public async checkEmail(email: string) {\r\n        if (!email || !email.includes('@') || email.length < 5) return;\r\n        await this._checkin.loadGuestAndEvent(email).catch((err) => {\r\n            this.handleError(err.message || err);\r\n            throw err;\r\n        });\r\n        this._router.navigate(['/checkin', 'details']);\r\n    }\r\n\r\n    private setupQRReader() {\r\n        this._reader\r\n            .listVideoInputDevices()\r\n            .then((videoInputDevices) => {\r\n                const device = videoInputDevices[0].deviceId;\r\n                this._reader\r\n                    .decodeOnceFromVideoDevice(device, 'qr-stream')\r\n                    .then((result) => this.checkQRCode(result.getText()))\r\n                    .catch((err) => console.error(err));\r\n            })\r\n            .catch((err) => console.error(err));\r\n    }\r\n\r\n    private handleError(message: string) {\r\n        this._checkin.setError(message);\r\n        this._router.navigate(['/checkin', 'error']);\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule, Route } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SharedContentModule } from '../ui/shared.module';\r\n\r\nimport { CheckinDetailsComponent } from './checkin-details.component';\r\nimport { CheckinGroupComponent } from './checkin-group.component';\r\nimport { CheckinPhotoComponent } from './checkin-photo.component';\r\nimport { CheckinPreferencesComponent } from './checkin-preferences.component';\r\nimport { CheckinQRScanComponent } from './checkin-qr-scan.component';\r\nimport { CheckinResultsComponent } from './checkin-result.component';\r\nimport { CheckinErrorComponent } from './checkin-error.component';\r\nimport { CheckinCovidComponent } from './checkin-covid.component';\r\nimport { CheckinComponent } from './checkin.component';\r\nimport { CheckoutQRScanComponent } from './checkout-guest.component';\r\nimport { CheckoutMessageComponent } from './checkout-message.component';\r\nimport * as Sentry from '@sentry/angular';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\n\r\nexport function HttpLoaderFactory(http: HttpClient) {\r\n    return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\nconst ROUTES: Route[] = [\r\n    {\r\n        path: '',\r\n        component: CheckinComponent,\r\n        children: [\r\n            { path: 'scan', component: CheckinQRScanComponent },\r\n            { path: 'details', component: CheckinDetailsComponent },\r\n            { path: 'group', component: CheckinGroupComponent },\r\n            { path: 'preferences', component: CheckinPreferencesComponent },\r\n            { path: 'photo', component: CheckinPhotoComponent },\r\n            { path: 'results', component: CheckinResultsComponent },\r\n            { path: 'error', component: CheckinErrorComponent },\r\n            { path: 'covid', component: CheckinCovidComponent },\r\n            { path: '**', redirectTo: 'scan' },\r\n        ],\r\n    },\r\n    { path: '**', redirectTo: '' },\r\n];\r\n\r\n@NgModule({\r\n    declarations: [\r\n        CheckinComponent,\r\n        CheckinResultsComponent,\r\n        CheckinQRScanComponent,\r\n        CheckinPreferencesComponent,\r\n        CheckinPhotoComponent,\r\n        CheckinGroupComponent,\r\n        CheckinDetailsComponent,\r\n        CheckinErrorComponent,\r\n        CheckinCovidComponent,\r\n        CheckoutQRScanComponent,\r\n        CheckoutMessageComponent,\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        SharedContentModule,\r\n        HttpClientModule,\r\n        RouterModule.forChild(ROUTES),\r\n        TranslateModule.forRoot({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                useFactory: HttpLoaderFactory,\r\n                deps: [HttpClient],\r\n            },\r\n        }),\r\n    ],\r\n})\r\nexport class VisitorCheckinModule {}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'checkin-group',\r\n    template: `\r\n\r\n    `,\r\n    styles: [`\r\n\r\n    `]\r\n})\r\nexport class CheckinGroupComponent {\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { first } from 'rxjs/operators';\r\nimport { CheckinStateService } from './checkin-state.service';\r\n//import { CalendarEvent } from '../../../../../libs/events/src/lib/event.class'\r\n\r\n@Component({\r\n    selector: '[checkin-details]',\r\n    template: `\r\n        <head>\r\n            <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\"\r\n            />\r\n        </head>\r\n\r\n        <form\r\n            *ngIf=\"(form | async) && !loading; else load_state\"\r\n            [formGroup]=\"form | async\"\r\n            class=\"bg-white rounded shadow overflow-hidden relative flex flex-col items-center my-4 mx-auto\"\r\n        >\r\n            <h3 class=\"text-2xl m-4\">{{ 'Confirm Details' | translate }}</h3>\r\n            <div field class=\"flex flex-col\">\r\n                <label form=\"host\">\r\n                    <i class=\"glyphicon glyphicon-user\"> </i>\r\n                    {{ 'Host' | translate }}</label\r\n                >\r\n                <mat-form-field appearance=\"outline\">\r\n                    <input\r\n                        matInput\r\n                        name=\"host\"\r\n                        formControlName=\"host\"\r\n                        id=\"host\"\r\n                        placeholder=\"Host's Email Address\"\r\n                    />\r\n                    <mat-error>\r\n                        {{\r\n                            'The email address of your host is required'\r\n                                | translate\r\n                        }}\r\n                    </mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div field class=\"flex flex-col\">\r\n                <label form=\"email\"\r\n                    ><i class=\"glyphicon glyphicon-phone\"></i>\r\n                    {{ 'Host Phone Number' | translate }}</label\r\n                >\r\n                <mat-form-field appearance=\"outline\">\r\n                    <input\r\n                        matInput\r\n                        type=\"text\"\r\n                        name=\"hostphone\"\r\n                        formControlName=\"hostphone\"\r\n                        id=\"hostphone\"\r\n                        placeholder=\"Phone Number\"\r\n                    />\r\n                </mat-form-field>\r\n            </div>\r\n\r\n            <div field class=\"flex flex-col\">\r\n                <label form=\"name\">\r\n                    <i class=\"glyphicon glyphicon-user\"></i>\r\n                    {{ 'Name' | translate }}</label\r\n                >\r\n                <mat-form-field appearance=\"outline\">\r\n                    <input\r\n                        matInput\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        formControlName=\"name\"\r\n                        id=\"name\"\r\n                        placeholder=\"Full Name\"\r\n                    />\r\n                    <mat-error>{{\r\n                        'Please enter your full name' | translate\r\n                    }}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div field class=\"flex flex-col\">\r\n                <label form=\"email\"\r\n                    ><i class=\"glyphicon glyphicon-envelope\"></i>\r\n                    {{ 'Email' | translate }}</label\r\n                >\r\n                <mat-form-field appearance=\"outline\">\r\n                    <input\r\n                        matInput\r\n                        type=\"text\"\r\n                        name=\"email\"\r\n                        formControlName=\"email\"\r\n                        id=\"email\"\r\n                        placeholder=\"Email Address\"\r\n                    />\r\n                    <mat-error>{{\r\n                        'A valid email address is required' | translate\r\n                    }}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n            <div field class=\"flex flex-col\">\r\n                <label form=\"email\"\r\n                    ><i class=\"glyphicon glyphicon-phone\"></i>\r\n                    {{ 'Guest Phone Number' | translate }}</label\r\n                >\r\n                <mat-form-field appearance=\"outline\">\r\n                    <input\r\n                        matInput\r\n                        type=\"text\"\r\n                        name=\"phone\"\r\n                        formControlName=\"phone\"\r\n                        id=\"phone\"\r\n                        placeholder=\"Phone Number\"\r\n                    />\r\n                </mat-form-field>\r\n            </div>\r\n            <div field class=\"flex flex-col\">\r\n                <label form=\"email\"\r\n                    ><i class=\"glyphicon glyphicon-briefcase\"></i>\r\n                    {{ 'Organisation/ Company' | translate }}</label\r\n                >\r\n                <mat-form-field appearance=\"outline\">\r\n                    <input\r\n                        matInput\r\n                        type=\"text\"\r\n                        name=\"organisation\"\r\n                        formControlName=\"organisation\"\r\n                        id=\"organozation\"\r\n                        placeholder=\"Organisation / Company\"\r\n                    />\r\n                </mat-form-field>\r\n            </div>\r\n            <button mat-button (click)=\"updateGuest()\">\r\n                {{ 'Next' | translate }}\r\n            </button>\r\n            <a\r\n                mat-icon-button\r\n                class=\"absolute top-0 right-0\"\r\n                [routerLink]=\"['/welcome']\"\r\n            >\r\n                <app-icon className=\"material-icons\">{{\r\n                    'Close' | translate\r\n                }}</app-icon>\r\n            </a>\r\n        </form>\r\n\r\n        <ng-template #load_state>\r\n            <div class=\"flex flex-col items-center m-auto\">\r\n                <mat-spinner [diameter]=\"48\"></mat-spinner>\r\n                <div class=\"my-4 text-lg text-white\">\r\n                    {{ 'Updating data and checking in...' | translate }}\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n    `,\r\n    styles: [\r\n        `\r\n            :host {\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n                right: 0;\r\n                bottom: 0;\r\n                background-color: rgba(0, 0, 0, 0.5);\r\n            }\r\n\r\n            form {\r\n                width: 40rem;\r\n                max-width: calc(100vw - 2rem);\r\n            }\r\n\r\n            [field] {\r\n                width: calc(100% - 2rem);\r\n            }\r\n\r\n            .absolute {\r\n                position: absolute;\r\n            }\r\n\r\n            button {\r\n                margin-bottom: 1rem;\r\n                width: 8rem;\r\n            }\r\n        `,\r\n    ],\r\n})\r\nexport class CheckinDetailsComponent {\r\n    public readonly form = this._checkin.form;\r\n\r\n    public loading = false;\r\n\r\n    // let nameValue = document.getElementById(\"name\").value;\r\n    // host = FormControl(this.host);\r\n    // name = this.name;\r\n    // email : String;\r\n    // phone : String;\r\n    // organization : String;\r\n\r\n    constructor(\r\n        private _checkin: CheckinStateService,\r\n        private _router: Router,\r\n        private translateService: TranslateService\r\n    ) {\r\n        {\r\n            this.translateService.setDefaultLang('en');\r\n            this.translateService.use(localStorage.getItem('lang') || 'en');\r\n        }\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.form.pipe(first()).subscribe((_) => (!_ ? this.previous() : ''));\r\n    }\r\n\r\n    public async updateGuest() {\r\n        this.loading = true;\r\n        await this._checkin.updateGuest();\r\n        await this._checkin.checkinGuest();\r\n        var evenepoc = this._checkin.eventend;\r\n        var qrscan = history.state.data.qrepoc;\r\n        this.loading = false;\r\n        if (this._checkin.entry === false || qrscan > evenepoc) {\r\n            console.log(this._checkin.entry);\r\n            this._router.navigate(['/checkin', 'error']);\r\n        } else {\r\n            this._router.navigate(['/checkin', 'photo']);\r\n        }\r\n    }\r\n\r\n    public previous() {\r\n        this._router.navigate(['/checkin', 'scan']);\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { SettingsService } from '@user-interfaces/common';\r\n\r\n@Component({\r\n    selector: '[app-checkin]',\r\n    template: `\r\n        <a-topbar-header class=\"w-full\"></a-topbar-header>\r\n        <div\r\n            class=\"flex-1 w-full bg-center bg-cover relative\"\r\n            [style.background-image]=\"'url(' + background + ')'\"\r\n        >\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    `,\r\n    styles: [\r\n        `\r\n            :host {\r\n                display: flex;\r\n                flex-direction: column;\r\n                height: 100%;\r\n                width: 100%;\r\n            }\r\n        `,\r\n    ],\r\n})\r\nexport class CheckinComponent {\r\n    public get background() {\r\n        return this._settings.get('app.home.background');\r\n    }\r\n\r\n    constructor(\r\n        private _settings: SettingsService,\r\n        private translateService: TranslateService\r\n    ) {\r\n        this.translateService.setDefaultLang('en');\r\n        this.translateService.use(localStorage.getItem('lang') || 'en');\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}